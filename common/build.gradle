plugins {
    id 'org.jetbrains.kotlin.jvm'
}
architectury {
    common rootProject.enabled_platforms.split(',')
}

dependencies {
    // We depend on Fabric Loader here to use the Fabric @Environment annotations,
    // which get remapped to the correct annotations on each platform.
    // Do NOT use other classes from Fabric Loader.
    modImplementation "net.fabricmc:fabric-loader:$rootProject.fabric_loader_version"

    // Architectury API. This is optional, and you can comment it out if you don't need it.
    modImplementation "dev.architectury:architectury:$rootProject.architectury_api_version"

    implementation "io.ktor:ktor-server-core:${project.ktor_version}"
    implementation "io.ktor:ktor-server-netty:${project.ktor_version}"
    implementation "io.ktor:ktor-network-tls-certificates:${project.ktor_version}"
    implementation "io.ktor:ktor-server-websockets:${project.ktor_version}"
    implementation "io.ktor:ktor-server-sessions:${project.ktor_version}"
    implementation "io.ktor:ktor-serialization-kotlinx-json:${project.ktor_version}"
    implementation "io.ktor:ktor-server-content-negotiation:${project.ktor_version}"
    implementation "io.ktor:ktor-server-status-pages:${project.ktor_version}"
}
repositories {
    mavenCentral()
}
kotlin {
    jvmToolchain(21)
}
